<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.movieCore.movie.mapperInterface.MovMovieMapper">

    <!-- 영화 빈 -->
    <resultMap type="com.example.movieCore.movie.bean.MovieBean" id="MovieBean">
        <result column="movie_cd" property="movieCd" jdbcType="VARCHAR"/>
        <result column="movie_nm" property="movieNm" jdbcType="VARCHAR"/>
        <result column="movie_nm_en" property="movieNmEn" jdbcType="VARCHAR"/>
        <result column="prdt_year" property="prdtYear" jdbcType="VARCHAR"/>
        <result column="open_dt" property="openDt" jdbcType="DATE"/>
        <result column="type_nm" property="typeNm" jdbcType="VARCHAR"/>
        <result column="prdt_stat_nm" property="prdtStatNm" jdbcType="VARCHAR"/>
        <result column="genre_alt" property="genreAlt" jdbcType="VARCHAR"/>
        <result column="rep_genre_nm" property="repGenreNm" jdbcType="VARCHAR"/>
        <result column="STATE" property="state" jdbcType="VARCHAR"/>

        <!-- 영화 상세정보 -->
        <result column="movie_nm_og" property="movieNmOg" jdbcType="VARCHAR"/>
        <result column="show_tm" property="showTm" jdbcType="VARCHAR"/>
        <result column="nation_nm" property="nationNm" jdbcType="VARCHAR"/>
        <result column="genre_nm" property="genreNm" jdbcType="VARCHAR"/>
        <result column="cast" property="cast" jdbcType="VARCHAR"/>
        <result column="cast_en" property="castEn" jdbcType="VARCHAR"/>
        <result column="show_types" property="showTypes" jdbcType="VARCHAR"/>
        <result column="show_type_group_nm" property="showTypeGroupNm" jdbcType="VARCHAR"/>
        <result column="show_type_nm" property="showTypeNm" jdbcType="VARCHAR"/>
        <result column="audit_no" property="auditNo" jdbcType="VARCHAR"/>
        <result column="watch_grade_nm" property="watchGradeNm" jdbcType="VARCHAR"/>
        <result column="point_yn" property="pointYn" jdbcType="VARCHAR"/>
        <result column="point_avg" property="pointAvg" jdbcType="VARCHAR"/>
        <result column="point_total_cnt" property="pointTotalCnt" jdbcType="VARCHAR"/>
        <result column="total_view_cnt" property="totalViewCnt" jdbcType="VARCHAR"/>
        <result column="preview_url" property="previewUrl" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- 영화 장르 리스트 -->
    <resultMap type="com.example.movieCore.movie.bean.MovieGenreBean" id="movieGenreBeanList">
        <result column="GENRE_CD" property="genreCd" jdbcType="VARCHAR"/>
        <result column="GENRE_NM" property="genreNm" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- 영화 컴퍼니 리스트 -->
    <resultMap type="com.example.movieCore.movie.bean.MovieCompanyBean" id="movieCompanyBeanList">
        <result column="company_cd" property="companyCd" jdbcType="VARCHAR"/>
        <result column="company_nm" property="companyNm" jdbcType="VARCHAR"/>
        <result column="company_nm_en" property="companyNmEn" jdbcType="VARCHAR"/>
        <result column="company_part_names" property="companyPartNames" jdbcType="VARCHAR"/>
        <result column="ceo_nm" property="ceoNm" jdbcType="VARCHAR"/>
        <result column="filmo_names" property="filmoNames" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- 영화 제작국가 리스트 -->
    <resultMap type="com.example.movieCore.movie.bean.MovieNationBean" id="movieNationBeanList">
        <result column="nation_cd" property="nationCd" jdbcType="VARCHAR"/>
        <result column="kor_nm" property="korNm" jdbcType="VARCHAR"/>
        <result column="eng_nm" property="engNm" jdbcType="VARCHAR"/>
    </resultMap>



    <!-- 관리자 - 영화 리스트 토탈 갯수 조회 -->
    <select id="selectMovieListTotalCntAdmin" parameterType="com.example.movieCore.movie.vo.MovVo" resultType="integer">
        SELECT
        count(MM.movie_cd) totalCnt
        FROM
        MOV_MOVIE MM

        WHERE
        1=1
        /* 제목 검색 */
        <choose>
            <when test="searchFilter == 'movieCd'">
                AND MM.MOVIE_CD LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test="searchFilter == 'movieNm'">
                AND MM.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test="searchFilter == 'repGenreNm'">
                AND MM.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <otherwise>
                AND (
                MM.MOVIE_CD LIKE CONCAT('%', #{searchText}, '%')
                OR MM.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
                OR MM.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')
                )
            </otherwise>
        </choose>
    </select>


    <!-- 관리자 - 영화 리스트 조회 -->
    <select id="selectMovieListAdmin" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="MovieBean">
        SELECT
        MM.movie_cd,
        MM.movie_nm,
        MM.movie_nm_en,
        MM.prdt_year,
        MM.open_dt,
        MM.type_nm,
        MM.prdt_stat_nm,
        MM.genre_alt,
        MM.rep_genre_nm,
        MM.STATE
        FROM MOV_MOVIE MM
        WHERE 1=1
        /* 제목 검색 */
        <choose>
            <when test="searchFilter == 'movieCd'">
                AND MM.MOVIE_CD LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test="searchFilter == 'movieNm'">
                AND MM.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test="searchFilter == 'repGenreNm'">
                AND MM.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <otherwise>
                AND (
                MM.MOVIE_CD LIKE CONCAT('%', #{searchText}, '%')
                OR MM.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
                OR MM.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')
                )
            </otherwise>
        </choose>

        /* 정렬 */
        <if test="sortKey != null and sortOdr != null">
            ORDER BY
            <choose>
                <when test="sortKey == 'movieCd'">
                    MM.movie_cd
                </when>
                <when test="sortKey == 'movieNm'">
                    MM.movie_nm
                </when>
                <when test="sortKey == 'prdtYear'">
                    MM.prdt_year
                </when>
                <when test="sortKey == 'repGenreNm'">
                    MM.rep_genre_nm
                </when>
                <when test="sortKey == 'state'">
                    MM.state
                </when>
                <otherwise>
                    MM.movie_cd
                </otherwise>
            </choose>
            <if test="sortOdr == 'asc'">
                ASC
            </if>
            <if test="sortOdr == 'desc'">
                DESC
            </if>
        </if>

        /* 페이징 */
        LIMIT #{paging.startIndex}, #{paging.itemsPerPage}
    </select>


    <!-- 영화 상태값 변경 -->
    <update id="updateMovieStateAdmin" parameterType="com.example.movieCore.movie.vo.MovVo">
        UPDATE MOV_MOVIE
        SET STATE = #{mode}
        WHERE MOVIE_CD IN
        <foreach item="movie" collection="movieBeanList" open="(" separator="," close=")">
            #{movie.movieCd}
        </foreach>
    </update>



    <!-- 영화 모듈 - 영화 리스트 토탈 갯수 조회 -->
    <select id="selectMovieListTotalCnt" parameterType="com.example.movieCore.movie.vo.MovVo" resultType="integer">
        SELECT
        count(MM.movie_cd) totalCnt
        FROM
        MOV_MOVIE MM, MOV_MOVIE_INFO MMI

        WHERE
            MM.MOVIE_CD = MMI.MOVIE_CD

            AND MM.STATE = 'B'

          /* 검색) 제목, 대표장르, 개봉년도, 배우명, 관람등급, 전체 */
        <choose>
            <when test="searchFilter == 'movieNm'">
                AND MM.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test="searchFilter == 'repGenreNm'">
                AND MM.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'openDt'">
                AND MM.open_dt LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'cast'">
                AND MMI.cast LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'watchGradeNm'">
                AND MMI.watch_grade_nm LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'nationNm'">
                AND MMI.NATION_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>





            <otherwise>
                AND (
                MM.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
                OR MM.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')

                OR MM.open_dt LIKE CONCAT('%', #{searchText}, '%')
                OR MMI.cast LIKE CONCAT('%', #{searchText}, '%')
                OR MMI.watch_grade_nm LIKE CONCAT('%', #{searchText}, '%')
                )
            </otherwise>
        </choose>
    </select>


    <!-- 영화 모듈 - 영화 리스트 조회 -->
    <select id="selectMovieList" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="MovieBean">
        SELECT
        MM.movie_cd,
        MM.movie_nm,
        MM.movie_nm_en,
        MM.prdt_year,
        MM.open_dt,
        MM.type_nm,
        MM.prdt_stat_nm,
        MM.genre_alt,
        MM.rep_genre_nm,
        MM.STATE
        FROM MOV_MOVIE MM, MOV_MOVIE_INFO MMI
        WHERE
            MM.MOVIE_CD = MMI.MOVIE_CD

            AND MM.STATE = 'B'

        /* 검색) 제목, 대표장르, 개봉년도, 배우명, 관람등급, 제작국가, 전체 */
        <choose>
            <when test="searchFilter == 'movieNm'">
                AND MM.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test="searchFilter == 'repGenreNm'">
                AND MM.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'openDt'">
                AND MM.open_dt LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'cast'">
                AND MMI.cast LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'watchGradeNm'">
                AND MMI.watch_grade_nm LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'nationNm'">
                AND MMI.NATION_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <otherwise>
                AND (
                MM.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
                OR MM.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')

                OR MM.open_dt LIKE CONCAT('%', #{searchText}, '%')
                OR MMI.cast LIKE CONCAT('%', #{searchText}, '%')
                OR MMI.watch_grade_nm LIKE CONCAT('%', #{searchText}, '%')
                )
            </otherwise>
        </choose>

        /* 정렬 */
        <if test="sortKey != null and sortOdr != null">
            ORDER BY
            <choose>
                <when test="sortKey == 'movieNm'">
                    MM.movie_nm
                </when>
                <when test="sortKey == 'prdtYear'">
                    MM.prdt_year
                </when>
                <when test="sortKey == 'repGenreNm'">
                    MM.rep_genre_nm
                </when>
                <otherwise>
                    MM.movie_cd
                </otherwise>
            </choose>
            <if test="sortOdr == 'asc'">
                ASC
            </if>
            <if test="sortOdr == 'desc'">
                DESC
            </if>
        </if>

        /* 페이징 */
        LIMIT #{paging.startIndex}, #{paging.itemsPerPage}
    </select>


    <!-- 영화 모듈 - 영화 상세정보 조회 -->
    <select id="selectMovieInfo" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="MovieBean">
        SELECT
            MM.movie_cd,
            MM.movie_nm,
            MM.movie_nm_en,
            MM.prdt_year,
            MM.open_dt,
            MM.type_nm,
            MM.prdt_stat_nm,
            MM.genre_alt,
            MM.rep_genre_nm,
            MM.STATE,
            MMI.movie_nm_og,
            MMI.show_tm,
            MMI.nation_nm,
            MMI.cast,
            MMI.cast_en,
            MMI.show_types,
            MMI.show_type_group_nm,
            MMI.show_type_nm,
            MMI.audit_no,
            MMI.watch_grade_nm,
            MMI.point_yn,
            MMI.point_avg,
            MMI.point_total_cnt,
            MMI.total_view_cnt,
            MMI.preview_url
        FROM MOV_MOVIE MM
                 LEFT JOIN MOV_MOVIE_INFO MMI ON MM.MOVIE_CD = MMI.MOVIE_CD
        WHERE MM.movie_cd = #{movieBean.movieCd}
    </select>


    <!-- 영화 장르 리스트 조회 -->
    <select id="selectMovieGenreList" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="movieGenreBeanList">
        SELECT
            MG.GENRE_CD,
            MG.GENRE_NM
        FROM MOV_MOVIE MM
            LEFT JOIN MOV_GENRE_MAP MGM ON MM.MOVIE_CD = MGM.MOVIE_CD
            LEFT JOIN MOV_GENRE MG ON MGM.GENRE_CD = MG.GENRE_CD
        WHERE MM.movie_cd = #{movieBean.movieCd}
    </select>


    <!-- 영화 회사 리스트 조회 -->
    <select id="selectMovieCompanyList" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="movieCompanyBeanList">
        SELECT
            MC.company_cd,
            MC.company_nm,
            MC.company_nm_en,
            MC.company_part_names,
            MC.ceo_nm,
            MC.filmo_names
        FROM MOV_MOVIE MM
             LEFT JOIN MOV_COMPANY_MAP MCM ON MM.MOVIE_CD = MCM.MOVIE_CD
             LEFT JOIN MOV_COMPANY MC ON MCM.COMPANY_CD = MC.COMPANY_CD
        WHERE MM.movie_cd = #{movieBean.movieCd}
    </select>


    <!-- 영화 제작국가 리스트 조회 -->
    <select id="selectMovieNationList" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="movieNationBeanList">
        SELECT
            MN.nation_cd,
            MN.kor_nm,
            MN.eng_nm
        FROM MOV_MOVIE MM
             LEFT JOIN MOV_NATION_MAP MNM ON MM.MOVIE_CD = MNM.MOVIE_CD
             LEFT JOIN MOV_NATION MN ON MNM.NATION_CD = MN.NATION_CD
        WHERE MM.movie_cd = #{movieBean.movieCd}
    </select>



</mapper>