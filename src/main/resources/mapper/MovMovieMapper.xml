<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.movieCore.movie.mapperInterface.MovMovieMapper">

    <!-- 영화 빈 -->
    <resultMap type="com.example.movieCore.movie.bean.MovieBean" id="MovieBean">
        <result column="movie_cd" property="movieCd" jdbcType="VARCHAR"/>
        <result column="movie_nm" property="movieNm" jdbcType="VARCHAR"/>
        <result column="movie_nm_en" property="movieNmEn" jdbcType="VARCHAR"/>
        <result column="prdt_year" property="prdtYear" jdbcType="VARCHAR"/>
        <result column="open_dt" property="openDt" jdbcType="TIMESTAMP"/>
        <result column="type_nm" property="typeNm" jdbcType="VARCHAR"/>
        <result column="prdt_stat_nm" property="prdtStatNm" jdbcType="VARCHAR"/>
        <result column="genre_alt" property="genreAlt" jdbcType="VARCHAR"/>
        <result column="rep_genre_nm" property="repGenreNm" jdbcType="VARCHAR"/>
        <result column="STATE" property="state" jdbcType="VARCHAR"/>

        <!-- 영화 상세정보 -->
        <result column="movie_nm_og" property="movieNmOg" jdbcType="VARCHAR"/>
        <result column="show_tm" property="showTm" jdbcType="VARCHAR"/>
        <result column="nation_nm" property="nationNm" jdbcType="VARCHAR"/>
        <result column="genre_nm" property="genreNm" jdbcType="VARCHAR"/>
        <result column="cast" property="cast" jdbcType="VARCHAR"/>
        <result column="cast_en" property="castEn" jdbcType="VARCHAR"/>
        <result column="show_types" property="showTypes" jdbcType="VARCHAR"/>
        <result column="show_type_group_nm" property="showTypeGroupNm" jdbcType="VARCHAR"/>
        <result column="show_type_nm" property="showTypeNm" jdbcType="VARCHAR"/>
        <result column="audit_no" property="auditNo" jdbcType="VARCHAR"/>
        <result column="watch_grade_nm" property="watchGradeNm" jdbcType="VARCHAR"/>
        <result column="point_yn" property="pointYn" jdbcType="VARCHAR"/>
        <result column="point_avg" property="pointAvg" jdbcType="VARCHAR"/>
        <result column="point_total_cnt" property="pointTotalCnt" jdbcType="VARCHAR"/>
        <result column="total_view_cnt" property="totalViewCnt" jdbcType="VARCHAR"/>
        <result column="preview_url" property="previewUrl" jdbcType="VARCHAR"/>
        <result column="plot" property="plot" jdbcType="VARCHAR"/>


        <!-- 포스터 파일 빈 -->
        <association property="fileBean" javaType="com.example.movieCore.cmm.FileBean">
            <result column="FILE_ID" property="fileId" jdbcType="VARCHAR"/>
            <result column="MODULE" property="module" jdbcType="VARCHAR"/>
            <result column="FILE_NAME" property="fileName" jdbcType="VARCHAR"/>
            <result column="LOCAL_NAME" property="localName" jdbcType="VARCHAR"/>
            <result column="FILE_EXT" property="fileExt" jdbcType="VARCHAR"/>
            <result column="URL" property="url" jdbcType="VARCHAR"/>
            <result column="VOLUME" property="volume" jdbcType="VARCHAR"/>
            <result column="CREATE_DT" property="createDt" jdbcType="VARCHAR"/>
            <result column="src" property="src" jdbcType="VARCHAR"/>
            <result column="ROLE" property="role" jdbcType="VARCHAR"/>
            <result column="MAP_DT" property="mapDt" jdbcType="VARCHAR"/>
        </association>

    </resultMap>


    <!-- 영화 장르 리스트 -->
    <resultMap type="com.example.movieCore.movie.bean.MovieGenreBean" id="movieGenreBeanList">
        <result column="GENRE_CD" property="genreCd" jdbcType="VARCHAR"/>
        <result column="GENRE_NM" property="genreNm" jdbcType="VARCHAR"/>
        <result column="genre_tmp_col" property="genreTmpCol" jdbcType="VARCHAR"/>
        <result column="REP_GENRE_NM" property="repGenreNm" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- 영화 컴퍼니 리스트 -->
    <resultMap type="com.example.movieCore.movie.bean.MovieCompanyBean" id="movieCompanyBeanList">
        <result column="company_cd" property="companyCd" jdbcType="VARCHAR"/>
        <result column="company_nm" property="companyNm" jdbcType="VARCHAR"/>
        <result column="company_nm_en" property="companyNmEn" jdbcType="VARCHAR"/>
        <result column="company_part_names" property="companyPartNames" jdbcType="VARCHAR"/>
        <result column="ceo_nm" property="ceoNm" jdbcType="VARCHAR"/>
        <result column="filmo_names" property="filmoNames" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- 영화 제작국가 리스트 -->
    <resultMap type="com.example.movieCore.movie.bean.MovieNationBean" id="movieNationBeanList">
        <result column="nation_cd" property="nationCd" jdbcType="VARCHAR"/>
        <result column="kor_nm" property="korNm" jdbcType="VARCHAR"/>
        <result column="eng_nm" property="engNm" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- 영화인 리스트 -->
    <resultMap type="com.example.movieCore.movie.bean.MoviePeopleBean" id="moviePeopleBeanList">
        <result column="people_cd" property="peopleCd" jdbcType="VARCHAR"/>
        <result column="people_nm" property="peopleNm" jdbcType="VARCHAR"/>
        <result column="people_nm_en" property="peopleNmEn" jdbcType="VARCHAR"/>
        <result column="rep_role_nm" property="repRoleNm" jdbcType="VARCHAR"/>
        <result column="filmo_names" property="filmoNames" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- 영화 평가 빈 -->
    <resultMap type="com.example.movieCore.movie.bean.MoviePersonalMoviePoint" id="moviePersonalMoviePointBean">
        <result column="movie_cd" property="movieCd" jdbcType="VARCHAR"/>
        <result column="mem_id" property="memId" jdbcType="VARCHAR"/>
        <result column="mem_name" property="memName" jdbcType="VARCHAR"/>
        <result column="point" property="point" jdbcType="VARCHAR"/>
        <result column="repl" property="repl" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 영화 파일 빈 -->
    <resultMap type="com.example.movieCore.cmm.FileBean" id="movieFileMap">
        <result column="FILE_ID" property="fileId" jdbcType="VARCHAR"/>
        <result column="MODULE" property="module" jdbcType="VARCHAR"/>
        <result column="FILE_NAME" property="fileName" jdbcType="VARCHAR"/>
        <result column="LOCAL_NAME" property="localName" jdbcType="VARCHAR"/>
        <result column="FILE_EXT" property="fileExt" jdbcType="VARCHAR"/>
        <result column="URL" property="url" jdbcType="VARCHAR"/>
        <result column="VOLUME" property="volume" jdbcType="VARCHAR"/>
        <result column="CREATE_DT" property="createDt" jdbcType="VARCHAR"/>
        <result column="src" property="src" jdbcType="VARCHAR"/>
        <result column="ROLE" property="role" jdbcType="VARCHAR"/>
        <result column="MAP_DT" property="mapDt" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- 영화 모듈 - 일일 박스오피스 리스트 조회 -->
    <resultMap type="com.example.movieCore.movie.bean.MovieBoxOfficeBean" id="BoxOfficeResultMap">
        <result column="SHOW_RANGE" property="showRange" jdbcType="VARCHAR"/>
        <result column="MOVIE_CD" property="movieCd" jdbcType="VARCHAR"/>
        <result column="BOX_RANK" property="rank" jdbcType="VARCHAR"/>
        <result column="BOX_RANK_OLD_AND_NEW" property="rankOldAndNew" jdbcType="VARCHAR"/>
        <result column="AUDI_CNT" property="audiCnt" jdbcType="VARCHAR"/>
        <result column="AUDI_INTEN" property="audiInten" jdbcType="VARCHAR"/>
        <result column="AUDI_CHANGE" property="audiChange" jdbcType="VARCHAR"/>
        <result column="AUDI_ACC" property="audiAcc" jdbcType="VARCHAR"/>
        <result column="MOVIE_NM" property="movieNm" jdbcType="VARCHAR"/>
        <!-- 무비 빈 -->
        <association property="movieBean" javaType="com.example.movieCore.movie.bean.MovieBean">
            <result column="MOVIE_CD" property="movieCd" jdbcType="VARCHAR"/>
            <result column="MOVIE_NM" property="movieNm" jdbcType="VARCHAR"/>
            <result column="MOVIE_NM_EN" property="movieNmEn" jdbcType="VARCHAR"/>
            <result column="PRDT_YEAR" property="prdtYear" jdbcType="VARCHAR"/>
            <result column="OPEN_DT" property="openDt" jdbcType="TIMESTAMP"/>
            <result column="TYPE_NM" property="typeNm" jdbcType="VARCHAR"/>
            <result column="PRDT_STAT_NM" property="prdtStatNm" jdbcType="VARCHAR"/>
            <result column="GENRE_ALT" property="genreAlt" jdbcType="VARCHAR"/>
            <result column="REP_GENRE_NM" property="repGenreNm" jdbcType="VARCHAR"/>
            <result column="STATE" property="state" jdbcType="VARCHAR"/>

        </association>
        <!-- 파일빈  -->
        <association property="fileBean" javaType="com.example.movieCore.cmm.FileBean">
            <result column="FILE_ID" property="fileId" jdbcType="VARCHAR"/>
            <result column="MODULE" property="module" jdbcType="VARCHAR"/>
            <result column="FILE_NAME" property="fileName" jdbcType="VARCHAR"/>
            <result column="LOCAL_NAME" property="localName" jdbcType="VARCHAR"/>
            <result column="FILE_EXT" property="fileExt" jdbcType="VARCHAR"/>
            <result column="URL" property="url" jdbcType="VARCHAR"/>
            <result column="VOLUME" property="volume" jdbcType="VARCHAR"/>
            <result column="CREATE_DT" property="createDt" jdbcType="VARCHAR"/>
            <result column="SRC" property="src" jdbcType="VARCHAR"/>
            <result column="ROLE" property="role" jdbcType="VARCHAR"/>
            <result column="MAP_DT" property="mapDt" jdbcType="VARCHAR"/>
        </association>

    </resultMap>





    <!-- 관리자 - 영화 리스트 토탈 갯수 조회 -->
    <select id="selectMovieListTotalCntAdmin" parameterType="com.example.movieCore.movie.vo.MovVo" resultType="integer">
        SELECT
        count(mm.movie_cd) totalCnt
        FROM
        MOV_MOVIE mm

        WHERE
        1=1
        /* 제목 검색 */
        <choose>
            <when test="searchFilter == 'movieCd'">
                AND mm.MOVIE_CD LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test="searchFilter == 'movieNm'">
                AND mm.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test="searchFilter == 'repGenreNm'">
                AND mm.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <otherwise>
                AND (
                mm.MOVIE_CD LIKE CONCAT('%', #{searchText}, '%')
                OR mm.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
                OR mm.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')
                )
            </otherwise>
        </choose>
    </select>


    <!-- 관리자 - 영화 리스트 조회 -->
    <select id="selectMovieListAdmin" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="MovieBean">
        SELECT
        mm.movie_cd,
        mm.movie_nm,
        mm.movie_nm_en,
        mm.prdt_year,
        mm.open_dt,
        mm.type_nm,
        mm.prdt_stat_nm,
        mm.genre_alt,
        mm.rep_genre_nm,
        mm.STATE
        FROM MOV_MOVIE mm
        WHERE 1=1
        /* 제목 검색 */
        <choose>
            <when test="searchFilter == 'movieCd'">
                AND mm.MOVIE_CD LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test="searchFilter == 'movieNm'">
                AND mm.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test="searchFilter == 'repGenreNm'">
                AND mm.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <otherwise>
                AND (
                mm.MOVIE_CD LIKE CONCAT('%', #{searchText}, '%')
                OR mm.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
                OR mm.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')
                )
            </otherwise>
        </choose>

        /* 정렬 */
        <if test="sortKey != null and sortOdr != null">
            ORDER BY
            <choose>
                <when test="sortKey == 'movieCd'">
                    mm.movie_cd
                </when>
                <when test="sortKey == 'movieNm'">
                    mm.movie_nm
                </when>
                <when test="sortKey == 'prdtYear'">
                    mm.prdt_year
                </when>
                <when test="sortKey == 'repGenreNm'">
                    mm.rep_genre_nm
                </when>
                <when test="sortKey == 'state'">
                    mm.state
                </when>
                <otherwise>
                    mm.movie_cd
                </otherwise>
            </choose>
            <if test="sortOdr == 'asc'">
                ASC
            </if>
            <if test="sortOdr == 'desc'">
                DESC
            </if>
        </if>

        /* 페이징 */
        LIMIT #{paging.startIndex}, #{paging.itemsPerPage}
    </select>


    <!-- 영화 상태값 변경 -->
    <update id="updateMovieStateAdmin" parameterType="com.example.movieCore.movie.vo.MovVo">
        UPDATE MOV_MOVIE
        SET STATE = #{mode}
        WHERE MOVIE_CD IN
        <foreach item="movie" collection="movieBeanList" open="(" separator="," close=")">
            #{movie.movieCd}
        </foreach>
    </update>



    <!-- 영화 모듈 - 영화 리스트 토탈 갯수 조회 -->
    <select id="selectMovieListTotalCnt" parameterType="com.example.movieCore.movie.vo.MovVo" resultType="integer">
        SELECT
        count(mm.movie_cd) totalCnt
        FROM
        MOV_MOVIE mm, MOV_MOVIE_INFO mmi

        WHERE
            mm.MOVIE_CD = mmi.MOVIE_CD

            AND mm.STATE = 'B'

          /* 검색) 제목, 대표장르, 개봉년도, 배우명, 관람등급, 전체 */
        <choose>
            <when test="searchFilter == 'movieNm'">
                AND mm.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test="searchFilter == 'repGenreNm'">
                AND mm.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'openDt'">
                AND mm.open_dt LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'cast'">
                AND mmi.cast LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'watchGradeNm'">
                AND mmi.watch_grade_nm LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'nationNm'">
                AND mmi.NATION_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>





            <otherwise>
                AND (
                mm.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
                OR mm.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')

                OR mm.open_dt LIKE CONCAT('%', #{searchText}, '%')
                OR mmi.cast LIKE CONCAT('%', #{searchText}, '%')
                OR mmi.watch_grade_nm LIKE CONCAT('%', #{searchText}, '%')
                )
            </otherwise>
        </choose>
    </select>


    <!-- 영화 모듈 - 영화 리스트 조회 -->
    <select id="selectMovieList" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="MovieBean">
        SELECT
        mm.movie_cd,
        mm.movie_nm,
        mm.movie_nm_en,
        mm.prdt_year,
        mm.open_dt,
        mm.type_nm,
        mm.prdt_stat_nm,
        mm.genre_alt,
        mm.rep_genre_nm,
        mm.STATE,
        mmi.POINT_AVG,
        mmi.POINT_TOTAL_CNT,

        mfm.role,
        mfm.map_dt,
        cf.FILE_ID,
        cf.MODULE,
        cf.FILE_NAME,
        cf.LOCAL_NAME,
        cf.FILE_EXT,
        cf.URL,
        cf.VOLUME,
        cf.CREATE_DT,
        cf.SRC
        FROM MOV_MOVIE mm
        JOIN
        MOV_MOVIE_INFO AS mmi ON mm.MOVIE_CD = mmi.MOVIE_CD
        LEFT JOIN
        MOV_FILE_MAPPING AS mfm ON mm.MOVIE_CD = mfm.MOVIE_CD and mfm.state = 'B' /* 파일매핑 1개로 제한 */
        LEFT JOIN
        CMM_FILE AS cf ON mfm.FILE_ID = cf.FILE_ID
        WHERE
            mm.STATE = 'B'

        /* 검색) 제목, 대표장르, 개봉년도, 배우명, 관람등급, 제작국가, 전체 */
        <choose>
            <when test="searchFilter == 'movieNm'">
                AND mm.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test="searchFilter == 'repGenreNm'">
                AND mm.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'openDt'">
                AND mm.open_dt LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'cast'">
                AND mmi.cast LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'watchGradeNm'">
                AND mmi.watch_grade_nm LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <when test="searchFilter == 'nationNm'">
                AND mmi.NATION_NM LIKE CONCAT('%', #{searchText}, '%')
            </when>

            <otherwise>
                AND (
                mm.MOVIE_NM LIKE CONCAT('%', #{searchText}, '%')
                OR mm.REP_GENRE_NM LIKE CONCAT('%', #{searchText}, '%')

                OR mm.open_dt LIKE CONCAT('%', #{searchText}, '%')
                OR mmi.cast LIKE CONCAT('%', #{searchText}, '%')
                OR mmi.watch_grade_nm LIKE CONCAT('%', #{searchText}, '%')
                )
            </otherwise>
        </choose>

        /* 정렬 */
        <if test="sortKey != null and sortOdr != null">
            ORDER BY
            <choose>
                <when test="sortKey == 'movieNm'">
                    mm.movie_nm
                </when>
                <when test="sortKey == 'prdtYear'">
                    mm.prdt_year
                </when>
                <when test="sortKey == 'repGenreNm'">
                    mm.rep_genre_nm
                </when>
                <otherwise>
                    mm.movie_cd
                </otherwise>
            </choose>
            <if test="sortOdr == 'asc'">
                ASC
            </if>
            <if test="sortOdr == 'desc'">
                DESC
            </if>
        </if>

        /* 페이징 */
        LIMIT #{paging.startIndex}, #{paging.itemsPerPage}
    </select>


    <!-- 영화 모듈 - 영화 상세정보 조회 -->
    <select id="selectMovieInfo" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="MovieBean">
        SELECT
            mm.movie_cd,
            mm.movie_nm,
            mm.movie_nm_en,
            mm.prdt_year,
            mm.open_dt,
            mm.type_nm,
            mm.prdt_stat_nm,
            mm.genre_alt,
            mm.rep_genre_nm,
            mm.STATE,
            mmi.movie_nm_og,
            mmi.show_tm,
            mmi.nation_nm,
            mmi.cast,
            mmi.cast_en,
            mmi.show_types,
            mmi.show_type_group_nm,
            mmi.show_type_nm,
            mmi.audit_no,
            mmi.watch_grade_nm,
            mmi.point_yn,
            mmi.point_avg,
            mmi.point_total_cnt,
            mmi.total_view_cnt,
            mmi.preview_url,
            mmi.plot,

            cf.FILE_NAME,
            cf.LOCAL_NAME,
            cf.FILE_EXT,
            cf.URL,
            cf.VOLUME,
            cf.CREATE_DT,
            cf.SRC

        FROM
            MOV_MOVIE AS mm
                JOIN
            MOV_MOVIE_INFO AS mmi ON mm.MOVIE_CD = mmi.MOVIE_CD
                LEFT JOIN
            MOV_FILE_MAPPING AS mfm ON mm.MOVIE_CD = mfm.MOVIE_CD and mfm.state = 'B'
                LEFT JOIN
            CMM_FILE AS cf ON mfm.FILE_ID = cf.FILE_ID
        WHERE mm.movie_cd = #{movieBean.movieCd}

    </select>


    <!-- 영화 장르 리스트 조회 -->
    <select id="selectMovieGenreList" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="movieGenreBeanList">
        SELECT
            MG.GENRE_CD,
            MG.GENRE_NM
        FROM MOV_MOVIE mm
            LEFT JOIN MOV_GENRE_MAP MGM ON mm.MOVIE_CD = MGM.MOVIE_CD
            LEFT JOIN MOV_GENRE MG ON MGM.GENRE_CD = MG.GENRE_CD
        WHERE mm.movie_cd = #{movieBean.movieCd}
    </select>


    <!-- 영화 회사 리스트 조회 -->
    <select id="selectMovieCompanyList" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="movieCompanyBeanList">
        SELECT
            MC.company_cd,
            MC.company_nm,
            MC.company_nm_en,
            MC.company_part_names,
            MC.ceo_nm,
            MC.filmo_names
        FROM MOV_MOVIE mm
             LEFT JOIN MOV_COMPANY_MAP MCM ON mm.MOVIE_CD = MCM.MOVIE_CD
             LEFT JOIN MOV_COMPANY MC ON MCM.COMPANY_CD = MC.COMPANY_CD
        WHERE mm.movie_cd = #{movieBean.movieCd}
    </select>


    <!-- 영화 제작국가 리스트 조회 -->
    <select id="selectMovieNationList" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="movieNationBeanList">
        SELECT
            MN.nation_cd,
            MN.kor_nm,
            MN.eng_nm
        FROM MOV_MOVIE mm
             LEFT JOIN MOV_NATION_MAP MNM ON mm.MOVIE_CD = MNM.MOVIE_CD
             LEFT JOIN MOV_NATION MN ON MNM.NATION_CD = MN.NATION_CD
        WHERE mm.movie_cd = #{movieBean.movieCd}
    </select>


    <!-- 해당 영화의 감독, 배우 리스트 조회 -->
    <select id="selectMoviePeopleList" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="moviePeopleBeanList">
        SELECT
            MP.PEOPLE_CD,
            MP.PEOPLE_NM,
            MP.PEOPLE_NM_EN,
            MP.REP_ROLE_NM,
            MP.FILMO_NAMES
        FROM MOV_MOVIE mm
             LEFT JOIN MOV_PEOPLE_MAP MPM ON mm.MOVIE_CD = MPM.MOVIE_CD
             LEFT JOIN MOV_PEOPLE MP ON MPM.PEOPLE_CD = MP.PEOPLE_CD
        WHERE mm.movie_cd = #{movieBean.movieCd}
    </select>


    <!-- 영화 조회 로그 추가 -->
    <insert id="addMovieViewCnt" parameterType="com.example.movieCore.movie.vo.MovVo" >
        INSERT INTO MOV_PERSONNAL_VIEW_LOG (MOVIE_CD, MEM_ID, VIEW_DT)
        SELECT #{movieBean.movieCd}, #{memberBean.memId}, NOW()
        FROM DUAL
        WHERE NOT EXISTS (
                SELECT 1
                FROM MOV_PERSONNAL_VIEW_LOG
                WHERE MOVIE_CD = #{movieBean.movieCd} AND MEM_ID = #{memberBean.memId}
            )
    </insert>

    <!-- 영화 조회 수 갱신 -->
    <update id="reFreshMovieTotalViewCnt" parameterType="com.example.movieCore.movie.vo.MovVo" >
        UPDATE MOV_MOVIE_INFO
        SET
            total_view_cnt = (select count(*) cnt
                              from MOV_PERSONNAL_VIEW_LOG mpvl
                              WHERE MOVIE_CD = #{movieBean.movieCd})
        WHERE
            MOVIE_CD = #{movieBean.movieCd}
    </update>


    <!-- 영화 찜 추가 -->
    <insert id="addMovieFav" parameterType="com.example.movieCore.movie.vo.MovVo" >
        INSERT INTO MOV_FAVORITE (MOVIE_CD, MEM_ID)
        VALUES (#{movieBean.movieCd}, #{memberBean.memId})
    </insert>

    <!-- 영화 찜 제거 -->
    <delete id="deleteMovieFav" parameterType="com.example.movieCore.movie.vo.MovVo" >
        DELETE FROM MOV_FAVORITE
        WHERE MOVIE_CD = #{movieBean.movieCd} AND MEM_ID = #{memberBean.memId}
    </delete>

    <!-- 영화 찜 정보 조회 -->
    <select id="selectMovieFavorite" parameterType="com.example.movieCore.movie.vo.MovVo" resultType="integer" >
        SELECT count(*) cnt
        FROM MOV_FAVORITE
        WHERE MOVIE_CD = #{movieBean.movieCd} AND MEM_ID = #{memberBean.memId}
    </select>


    <!-- 영화 평가(별점, 한줄평) 없을시 등록/ 이미 있을시 업데이트  -->
    <insert id="updateMovPersonalMoviePoint" parameterType="com.example.movieCore.movie.vo.MovVo">
        INSERT INTO MOV_PERSONAL_MOVIE_POINT (mem_id, movie_cd, point, repl, state)
        VALUES (#{moviePersonalMoviePointBean.memId},
                #{moviePersonalMoviePointBean.movieCd},
                #{moviePersonalMoviePointBean.point},
                #{moviePersonalMoviePointBean.repl},
                #{moviePersonalMoviePointBean.state})
            ON DUPLICATE KEY UPDATE
                                 point = VALUES(point),
                                 repl = VALUES(repl),
                                 state = VALUES(state)
    </insert>


    <!-- 영화 나의 평가 정보 조회 -->
    <select id="selectMoviePersonalMoviePointBean" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="moviePersonalMoviePointBean" >
        SELECT
            movie_cd,
            mem_id,
            point,
            repl,
            state
        FROM MOV_PERSONAL_MOVIE_POINT
        WHERE MOVIE_CD = #{movieBean.movieCd} AND MEM_ID = #{memberBean.memId}
    </select>


    <!-- 영화 평가 정보 삭제 -->
    <delete id="deleteMovPersonalMoviePoint" parameterType="com.example.movieCore.movie.vo.MovVo"  >
        DELETE FROM MOV_PERSONAL_MOVIE_POINT
        WHERE MOVIE_CD = #{moviePersonalMoviePointBean.movieCd} AND MEM_ID = #{moviePersonalMoviePointBean.memId}
    </delete>


    <!-- 영화 상세정보 평가(평가횟수, 평균 별점) 갱신 -->
    <update id="updateMovieInfoPoint" parameterType="com.example.movieCore.movie.vo.MovVo" >
        UPDATE MOV_MOVIE_INFO
        SET
            POINT_TOTAL_CNT = (
                                SELECT count(*) cnt
                                FROM MOV_PERSONAL_MOVIE_POINT
                                WHERE MOVIE_CD = #{moviePersonalMoviePointBean.movieCd}),
            POINT_AVG = (
                                SELECT ROUND(SUM(CAST(point AS DECIMAL)) / COUNT(*), 1) AS point_avg
                                FROM MOV_PERSONAL_MOVIE_POINT
                                WHERE MOVIE_CD = #{moviePersonalMoviePointBean.movieCd})
        WHERE
            MOVIE_CD = #{moviePersonalMoviePointBean.movieCd}
    </update>



    <!-- 영화 장르 취향 체크 -->
    <select id="checkGenreTaste" parameterType="com.example.movieCore.movie.vo.MovVo" resultType="integer" >
        select count(*) checkCnt
        from MOV_PERSONAL_GRNRE_TASTE
        where
            MEM_ID = #{memberBean.memId}
        and
            GENRE_CD = #{movieBean.movieGenreBean.genreCd}

    </select>

    <!-- 영화 장르 취향 인서트 -->
    <insert id="insertGenreTaste" parameterType="com.example.movieCore.movie.vo.MovVo">
        INSERT INTO MOV_PERSONAL_GRNRE_TASTE
            (GENRE_CD, GENRE_NM, MEM_ID, POINT_AVG, POINT_COUNT, POINT_TOTAL)
        VALUES
            (#{movieBean.movieGenreBean.genreCd},
             #{movieBean.movieGenreBean.genreNm},
             #{memberBean.memId},
             0,
             0,
             0)
    </insert>


    <!-- 영화 장르 취향 업데이트 -->
    <update id="updateGenreTaste" parameterType="com.example.movieCore.movie.vo.MovVo">
        UPDATE MOV_PERSONAL_GRNRE_TASTE
        SET
            POINT_TOTAL = POINT_TOTAL + #{moviePersonalMoviePointBean.point},
            POINT_COUNT = POINT_COUNT + 1,
            POINT_AVG = (POINT_TOTAL + #{moviePersonalMoviePointBean.point}) / (POINT_COUNT + 1)
        WHERE
            GENRE_CD = #{movieBean.movieGenreBean.genreCd}
          AND MEM_ID = #{movieBean.movieGenreBean.memId}
    </update>


    <!-- 영화 평가 정보 리스트 조회 -->
    <select id="selectMoviePersonalMoviePointBeanList" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="moviePersonalMoviePointBean" >
        SELECT
            MPMP.movie_cd,
            MPMP.mem_id,
            mmi.MEM_NAME,
            MPMP.point,
            MPMP.repl,
            MPMP.state
        FROM MOV_PERSONAL_MOVIE_POINT MPMP
                 JOIN MEM_MEMBER_INFO mmi ON MPMP.MEM_ID = mmi.MEM_ID
        WHERE MPMP.MOVIE_CD = #{movieBean.movieCd} AND MPMP.MEM_ID != #{memberBean.memId}
    </select>


    <!-- 영화 한줄평 상태 변경 -->
    <update id="updateMovieState" parameterType="com.example.movieCore.movie.vo.MovVo" >
        UPDATE MOV_PERSONAL_MOVIE_POINT
        SET state = #{mode}
        WHERE movie_cd = #{moviePersonalMoviePointBean.movieCd} AND mem_id = #{moviePersonalMoviePointBean.memId}
    </update>


    <!-- 영화 포스터 파일 인서트 -->
    <insert id="insertFileBean" parameterType="com.example.movieCore.movie.vo.MovVo" >
        INSERT INTO
            CMM_FILE (
            FILE_ID,
            MODULE,
            FILE_NAME,
            LOCAL_NAME,
            FILE_EXT,
            URL,
            VOLUME,
            CREATE_DT,
            src
        )
        VALUES
            (
                #{movieBean.fileBean.fileId},
                #{movieBean.fileBean.module},
                #{movieBean.fileBean.fileName},
                #{movieBean.fileBean.localName},
                #{movieBean.fileBean.fileExt},
                #{movieBean.fileBean.url},
                #{movieBean.fileBean.volume},
                #{movieBean.fileBean.createDt},
                #{movieBean.fileBean.src}
            )
    </insert>


    <!-- 영화 나머지 포스터 상태값 'D' 로 변경 -->
    <update id="updateMovieFileState" parameterType="com.example.movieCore.movie.vo.MovVo">
        UPDATE MOV_FILE_MAPPING
        SET STATE = 'D'
        WHERE MOVIE_CD = #{movieBean.movieCd}
    </update>


    <!-- 영화 포스터 파일 매핑 인서트 -->
    <insert id="insertMovieFileMap" parameterType="com.example.movieCore.movie.vo.MovVo" >
        INSERT INTO
            MOV_FILE_MAPPING (
                              MOVIE_CD,
                              FILE_ID,
                              ROLE,
                              MAP_DT,
                              STATE
        )
        VALUES
            (
             #{movieBean.movieCd},
             #{movieBean.fileBean.fileId},
             'POSTER',
             NOW(),
             'B'
            )
    </insert>


    <!-- 영화 포스터 파일 조회 -->
    <select id="selectMoviePosterBean" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="movieFileMap">
        SELECT
            mfm.MOVIE_CD,
            mfm.FILE_ID,
            mfm.ROLE,
            mfm.MAP_DT,

            cf.FILE_ID,
            cf.MODULE,
            cf.FILE_NAME,
            cf.LOCAL_NAME,
            cf.FILE_EXT,
            cf.URL,
            cf.VOLUME,
            cf.CREATE_DT,
            cf.src
        FROM
            MOV_FILE_MAPPING mfm
            JOIN
            CMM_FILE cf ON mfm.FILE_ID = cf.FILE_ID
        WHERE
            mfm.movie_cd = #{movieBean.movieCd}
          AND mfm.ROLE = 'POSTER'
        ORDER BY
            mfm.MAP_DT DESC
            LIMIT 1
    </select>


    <!-- 내가 찜한 영화 리스트 조회-->
    <select id="selectMyFavMovList" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="MovieBean">
        SELECT

            mm.rep_genre_nm,

            mmi.MOVIE_CD,
            mmi.MOVIE_NM,
            mmi.MOVIE_NM_EN,
            mmi.MOVIE_NM_OG,
            mmi.PRDT_YEAR,
            mmi.SHOW_TM,
            mmi.OPEN_DT,
            mmi.PRDT_STAT_NM,
            mmi.TYPE_NM,
            mmi.NATION_NM,
            mmi.GENRE_NM,
            mmi.CAST,
            mmi.CAST_EN,
            mmi.SHOW_TYPES,
            mmi.SHOW_TYPE_GROUP_NM,
            mmi.SHOW_TYPE_NM,
            mmi.AUDIT_NO,
            mmi.WATCH_GRADE_NM,
            mmi.POINT_YN,
            mmi.POINT_AVG,
            mmi.POINT_TOTAL_CNT,
            mmi.TOTAL_VIEW_CNT,
            mmi.PREVIEW_URL,
            mmi.plot,


            mfm.role,
            mfm.map_dt,
            cf.FILE_ID,
            cf.MODULE,
            cf.FILE_NAME,
            cf.LOCAL_NAME,
            cf.FILE_EXT,
            cf.URL,
            cf.VOLUME,
            cf.CREATE_DT,
            cf.SRC

        FROM
            MOV_MOVIE AS mm
                JOIN
            MOV_MOVIE_INFO AS mmi ON mm.MOVIE_CD = mmi.MOVIE_CD
                JOIN
            MOV_FAVORITE AS mf ON mm.MOVIE_CD = mf.MOVIE_CD
                LEFT JOIN
            MOV_FILE_MAPPING AS mfm ON mm.MOVIE_CD = mfm.MOVIE_CD and mfm.state = 'B'
                LEFT JOIN
            CMM_FILE AS cf ON mfm.FILE_ID = cf.FILE_ID
        WHERE
            mf.mem_id = #{memberBean.memId}

    </select>


    <!-- 해당 영화의 내 한줄평 조회-->
    <select id="selectMoviePersonalMoviePoint" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="moviePersonalMoviePointBean" >
        SELECT
            mpmp.MOVIE_CD,
            mpmp.MEM_ID,
            mpmp.POINT,
            mpmp.REPL,
            mpmp.STATE
        FROM MOV_PERSONAL_MOVIE_POINT AS mpmp
        WHERE mpmp.MOVIE_CD = #{movieBean.movieCd}
          AND mpmp.MEM_ID = #{memberBean.memId}

    </select>



    <!-- 영화 모듈 - 일일 박스오피스 리스트 조회 -->
    <select id="selectDailyBoxOfficeList" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="BoxOfficeResultMap">
        SELECT
            mbo.SHOW_RANGE,
            mbo.MOVIE_CD,
            mbo.BOX_RANK,
            mbo.BOX_RANK_OLD_AND_NEW,
            mbo.AUDI_CNT,
            mbo.AUDI_INTEN,
            mbo.AUDI_CHANGE,
            mbo.AUDI_ACC,
            mm.MOVIE_NM,
            mm.MOVIE_NM_EN,
            mm.PRDT_YEAR,
            mm.OPEN_DT,
            mm.TYPE_NM,
            mm.PRDT_STAT_NM,
            mm.GENRE_ALT,
            mm.REP_GENRE_NM,
            mm.STATE,
            mmi.POINT_AVG,
            mmi.POINT_TOTAL_CNT,
            mfm.role,
            mfm.map_dt,
            cf.FILE_ID,
            cf.MODULE,
            cf.FILE_NAME,
            cf.LOCAL_NAME,
            cf.FILE_EXT,
            cf.URL,
            cf.VOLUME,
            cf.CREATE_DT,
            cf.SRC
        FROM
            MOV_BOX_OFFICE mbo
                JOIN
            MOV_MOVIE mm ON mbo.MOVIE_CD = mm.MOVIE_CD
                JOIN
            MOV_MOVIE_INFO AS mmi ON mm.MOVIE_CD = mmi.MOVIE_CD
                LEFT JOIN
            MOV_FILE_MAPPING AS mfm ON mm.MOVIE_CD = mfm.MOVIE_CD AND mfm.state = 'B' /* 파일매핑 1개로 제한 */
                LEFT JOIN
            CMM_FILE AS cf ON mfm.FILE_ID = cf.FILE_ID
        WHERE
            mbo.SHOW_RANGE = #{movieBoxOfficeBean.showRange}
        ORDER BY
            CAST(mbo.BOX_RANK AS UNSIGNED) ASC
    </select>



    <!-- 사용자 최다 조회 장르 -->
    <select id="viewLogTopMovGr" parameterType="com.example.movieCore.login.vo.LoginMemberVo" resultMap="movieGenreBeanList">
        SELECT
            latest_movies.REP_GENRE_NM,
            COUNT(*) AS genre_tmp_col
        FROM
            (SELECT
                 pvl.VIEW_DT,
                 pvl.MEM_ID,
                 pvl.MOVIE_CD,
                 mv.MOVIE_NM,
                 mv.MOVIE_NM_EN,
                 mv.PRDT_YEAR,
                 mv.OPEN_DT,
                 mv.TYPE_NM,
                 mv.PRDT_STAT_NM,
                 mv.GENRE_ALT,
                 mv.REP_GENRE_NM,
                 mv.STATE
             FROM
                 MOV_PERSONNAL_VIEW_LOG pvl
                     JOIN
                 MOV_MOVIE mv
                 ON
                     pvl.MOVIE_CD = mv.MOVIE_CD
             WHERE
                 pvl.MEM_ID = #{memberBean.memId}
             ORDER BY
                 pvl.VIEW_DT DESC
                 LIMIT 20) AS latest_movies
        GROUP BY
            latest_movies.REP_GENRE_NM
        ORDER BY
            genre_tmp_col DESC
            LIMIT 3
    </select>


    <!-- 포인트 평균 영화 최다 장르 -->
    <select id="pointAvgTopMovGr" parameterType="com.example.movieCore.login.vo.LoginMemberVo" resultMap="movieGenreBeanList">
        SELECT
            mv.REP_GENRE_NM,
            AVG(pmp.POINT) AS genre_tmp_col
        FROM
            MOV_MOVIE mv
                JOIN
            MOV_PERSONAL_MOVIE_POINT pmp
            ON
                mv.MOVIE_CD = pmp.MOVIE_CD
        WHERE
            pmp.MEM_ID = #{memberBean.memId}
        GROUP BY
            mv.REP_GENRE_NM
        ORDER BY
            genre_tmp_col DESC
            LIMIT 3
    </select>


    <!-- 최다 좋아요 영화 장르 -->
    <select id="favTopMovGr" parameterType="com.example.movieCore.login.vo.LoginMemberVo" resultMap="movieGenreBeanList">
        SELECT
            mv.REP_GENRE_NM,
            COUNT(*) AS genre_tmp_col
        FROM
            MOV_MOVIE mv
                JOIN
            MOV_FAVORITE mf
            ON
                mv.MOVIE_CD = mf.MOVIE_CD
        WHERE
            mf.MEM_ID = #{memberBean.memId}
        GROUP BY
            mv.REP_GENRE_NM
        ORDER BY
            genre_tmp_col DESC
            LIMIT 3
    </select>


    <select id="pointMaxTopMovGr" parameterType="com.example.movieCore.login.vo.LoginMemberVo" resultMap="movieGenreBeanList">
        SELECT
            mv.REP_GENRE_NM,
            COUNT(*) AS genre_tmp_col
        FROM
            MOV_MOVIE mv
                JOIN
            MOV_PERSONAL_MOVIE_POINT pmp
            ON
                mv.MOVIE_CD = pmp.MOVIE_CD
        WHERE
            pmp.MEM_ID = #{memberBean.memId}
        GROUP BY
            mv.REP_GENRE_NM
        ORDER BY
            genre_tmp_col DESC
            LIMIT 3
    </select>



    <!-- 영화 모듈 - 영화 리스트 조회 -->
    <select id="selectPersonalRecommendMov" parameterType="com.example.movieCore.movie.vo.MovVo" resultMap="MovieBean">
        SELECT
        mm.movie_cd,
        mm.movie_nm,
        mm.movie_nm_en,
        mm.prdt_year,
        mm.open_dt,
        mm.type_nm,
        mm.prdt_stat_nm,
        mm.genre_alt,
        mm.rep_genre_nm,
        mm.STATE,
        mmi.POINT_AVG,
        mmi.POINT_TOTAL_CNT,
        mfm.role,
        mfm.map_dt,
        cf.FILE_ID,
        cf.MODULE,
        cf.FILE_NAME,
        cf.LOCAL_NAME,
        cf.FILE_EXT,
        cf.URL,
        cf.VOLUME,
        cf.CREATE_DT,
        cf.SRC,
        COALESCE(pmp.AVG_POINT, 0) AS AVG_POINT
        FROM
        MOV_MOVIE mm
        JOIN
        MOV_MOVIE_INFO mmi ON mm.MOVIE_CD = mmi.MOVIE_CD
        LEFT JOIN
        MOV_FILE_MAPPING mfm ON mm.MOVIE_CD = mfm.MOVIE_CD and mfm.state = 'B'
        LEFT JOIN
        CMM_FILE cf ON mfm.FILE_ID = cf.FILE_ID
        JOIN
        MOV_GENRE_MAP mgm ON mm.MOVIE_CD = mgm.MOVIE_CD
        JOIN
        MOV_GENRE mg ON mgm.GENRE_CD = mg.GENRE_CD
        LEFT JOIN
        (SELECT
        MOVIE_CD, AVG(POINT) AS AVG_POINT
        FROM
        MOV_PERSONAL_MOVIE_POINT
        GROUP BY
        MOVIE_CD) pmp ON mm.MOVIE_CD = pmp.MOVIE_CD
        WHERE
        mm.STATE = 'B'
        AND mg.GENRE_NM IN
        <foreach item="genre" index="index" collection="movieBean.movieGenreBeanList" open="(" separator="," close=")">
            #{genre.repGenreNm}
        </foreach>
        ORDER BY
        AVG_POINT DESC
        LIMIT 10
    </select>







</mapper>