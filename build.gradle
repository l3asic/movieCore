plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	/* 머스타치 */
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	/* 스프링시큐리티 */
	implementation 'org.springframework.boot:spring-boot-starter-security'
	/* jwt 라이브러리 */
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	/* MyBatis 라이브러리 의존성 추가 */
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
	/* 롬복 */
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	/* 부트 개발툴 */
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	/* MySql 커넥터 */
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	/* 내장 톰캣*/
	implementation  'org.springframework.boot:spring-boot-starter-tomcat'

	// 스프링 부트 웹플럭스 의존성 추가 (API 호출용)
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Gson 라이브러리
	implementation 'com.google.code.gson:gson:2.8.8'

	// jackson 라이브러리 (json -> 자바 객체 파싱 용)
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'



}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
